#!/usr/bin/env python
#
# Copyright (c) 2013 Jim Kalafut
#
# Released under the MIT license
# https://raw.github.com/kalafut/crutches/master/LICENSE
#

import argparse

import crutches.config as config
import crutches.generate as generate
import crutches.output as output
import crutches.project as project
import crutches.stress as stress
import crutches.template as template


def main():
    parser = argparse.ArgumentParser(description='Generate parse project files into a single-file reference.')
    parser.add_argument('-c', dest='config', action='store', default='main', help='Select a configuration from config.yml [default: main]')
    parser.add_argument('-g', dest='generate', action='store_true', help='Generate a boilerplate project/section')
    parser.add_argument('-y', dest='yamlize', action='store', metavar='FILE', help='Create an entries section from FILE')
    parser.add_argument('-l', dest='listing', const="__nothing__", nargs='?', metavar="search", help='List all projects containing "search" [default: all projects]')
    parser.add_argument('--stress', dest='stress', action='store_true', help='Stress test')
    args = parser.parse_args()

    if args.generate:
        generate.generate()
        exit()

    if args.listing:
        project.list_projects("" if args.listing == "__nothing__" else args.listing)
        exit()

    if args.yamlize:
        yamlize(args.yamlize)
        exit();
    elif args.stress:
        print("Generating random projects")
        stress.stress_test(6, 15, 20)
        print("done")
        exit()

    cfg = config.Config(args.config)

    db = project.load_project_trees(["projects", cfg.private], cfg)
    html = template.parse_template(cfg.template, db)

    output.build(html, cfg)

    print ("index.html compiled ({size} bytes)".format(size=len(html)))


if __name__ == "__main__":
    main()
