section: django.db.models
url: https://docs.djangoproject.com/en/1.4/ref/models/fields/#django.db.models.{entry}
sort: fixed
entries:
    - [AutoField,                 'An IntegerField that automatically increments according to available IDs.' ]
    - [BigIntegerField,           'A 64-bit integer.' ]
    - [BooleanField,              'A true/false field. If you need to accept null values then use NullBooleanField instead.' ]
    - [CharField,                 'A string field, for small to large sized strings. For large amounts of text, use TextField.' ]
    - [DateField,                 'A date, represented in Python by a datetime.date instance.'  ]
    - [DateTimeField,             'A date and time, represented in Python by a datetime.datetime instance.'  ]
    - [DecimalField,              'A fixed-precision decimal number, represented in Python by a Decimal instance.' ]
    - [CommaSeparatedIntegerField, A field of integers separated by commas.]
    - [EmailField,                 A CharField that checks that the value is a valid email address.]
    - [FileField,                  A file-upload field.]
    - [FilePathField,              A CharField whose choices are limited to the filenames in a certain directory on the filesystem.]
    - [FloatField,                 A floating-point number represented in Python by a float instance.]
    - [ImageField,                'Inherits all attributes and methods from FileField, but also validates that the uploaded object is a valid image.']
    - [IntegerField,               An integer.]
    - [IPAddressField,            'An IP address, in string format (e.g. "192.0.2.30").']
    - [GenericIPAddressField,     'An IPv4 or IPv6 address, in string format (e.g. 192.0.2.30 or 2a02:42fe::4).']
    - [NullBooleanField,          'Like a BooleanField, but allows NULL as one of the options.']
    - [PositiveIntegerField,      'Like an IntegerField, but must be either positive or zero (0).']
    - [PositiveSmallIntegerField, 'Like a PositiveIntegerField, but only allows values under a certain (database-dependent) point.']
    - [SlugField,                 'A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They''re generally used in URLs.']
    - [SmallIntegerField,         'Like an IntegerField, but only allows values under a certain (database-dependent) point.']
    - [TextField,                  A large text field.]
    - [TimeField,                 'A time, represented in Python by a datetime.time instance.']
    - [URLField,                   A CharField for a URL.]
    - [ForeignKey,                 A many-to-one relationship.]
    - [ManyToManyField,            A many-to-many relationship.]
    - [OneToOneField,             'A one-to-one relationship. Conceptually, this is similar to a ForeignKey with unique=True, but the "reverse" side of the relation will directly return a single object.']
